import os
import pandas as pd
import math
from pling.utils import get_pling_root_dir, get_fasta_file_info

configfile: "../config.yaml"

OUTPUTPATH = config["output_dir"]
PREFIX = config["prefix"]
batch_size = config["batch_size"]
FASTAFILES = [el[0] for el in pd.read_csv(config["genomes_list"], header=None).values]
FASTAEXT = {os.path.splitext(os.path.basename(el))[0]:os.path.splitext(os.path.basename(el))[1] for el in FASTAFILES}
GENOMES = list(FASTAEXT.keys())

include: "../common_rules/common_rules.smk"

rule all:
    input:
        seq_jaccard = f"{OUTPUTPATH}/jaccard/all_pairs_jaccard_distance.tsv",
        communities = f"{OUTPUTPATH}/jaccard/jaccard_communities"

rule make_unimogs:
    input:
        batch_list=lambda wildcards: f"{OUTPUTPATH}/batches/batch_{wildcards.batch}.txt"
    output:
        jaccard=f"{OUTPUTPATH}/tmp_files/jaccard_batchwise/batch_{{batch}}_jaccard.tsv",
        unimog = f"{OUTPUTPATH}/unimogs/batch_{{batch}}_align.unimog",
        map = f"{OUTPUTPATH}/unimogs/batch_{{batch}}_map.txt"
    threads: config["make_unimogs_threads"]
    resources:
        mem_mb=lambda wildcards, attempt: config["make_unimogs_mem"]*attempt
    params:
        genomes_list = config["genomes_list"],
        batch = lambda wildcards: wildcards.batch,
        outputpath = OUTPUTPATH,
        identity_threshold = config["identity_threshold"],
        jaccard_distance = config["seq_jaccard_distance"],
        pling_root_dir = get_pling_root_dir()
    conda: "../envs/integerise.yaml"
    shadow: "shallow"
    shell:
        """
        # set conda env first in $PATH - TODO: keep this or manage in other way?
        # this issue happens when running a pipeline and a conda env is already active but it is not the first
        # in the $PATH that have python installed (let's call this env E).
        # In this case, snakemake will activate the "../envs/integerise.yaml" env but the python in the $PATH is the one
        # in E, which won't have the dependencies required to run the script below.
        # This is the expected behaviour, is not a bug in conda or snakemake.
        # For more details, see https://github.com/conda/conda/issues/9392#issuecomment-1291041085
        PATH="$CONDA_PREFIX"/bin:$PATH  # quick fix for the issue described above
        PYTHONPATH={params.pling_root_dir} python {params.pling_root_dir}/pling/align_snakemake/unimog.py \
            --genomes_list {params.genomes_list} \
            --batch {params.batch} \
            --identity_threshold {params.identity_threshold} \
            --jaccard_distance {params.jaccard_distance} \
            --outputpath {params.outputpath} \
            --jaccard_output {output.jaccard} \
            --unimog_output {output.unimog} \
            --map_output {output.map}
        """
