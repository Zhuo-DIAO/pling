import os
import pandas as pd

configfile: "../config.yaml"

FASTAFILES = [el[0] for el in pd.read_csv(config["genomes_list"], header=None).values]
FASTAEXT = {os.path.splitext(os.path.basename(el))[0]:os.path.splitext(os.path.basename(el))[1] for el in FASTAFILES}
GENOMES = list(FASTAEXT.keys())
FASTAPATH = os.path.dirname(FASTAFILES[0])
OUTPUTPATH = config["output_dir"]
PREFIX = config["prefix"]

include: "../common_rules/common_rules.smk"

rule all:
    input:
        communities = f"{OUTPUTPATH}/jaccard/jaccard_communities"

rule pairwise_seq_jaccard:
    input:
        genome_1_fasta=lambda wildcards: f"{FASTAPATH}/{wildcards.genome1}{FASTAEXT[wildcards.genome1]}",
        genome_2_fasta=lambda wildcards: f"{FASTAPATH}/{wildcards.genome2}{FASTAEXT[wildcards.genome2]}"
    output:
        jaccard=f"{OUTPUTPATH}/tmp_files/jaccard_pairwise/{{genome1}}~{{genome2}}_jaccard.tsv"
    threads: config["pairwise_seq_jaccard_threads"]
    resources:
        mem_mb=lambda wildcards, attempt: config["pairwise_seq_jaccard_mem"]*attempt
    conda: "../envs/integerise.yaml"
    params:
        genome1 = lambda wildcards: wildcards.genome1,
        genome2 = lambda wildcards: wildcards.genome2,
        identity_threshold = config["identity_threshold"],
        length_threshold = config["length_threshold"]
    script:
        "seq_jaccard.py"


rule get_communities:
    input:
        jaccard = f"{OUTPUTPATH}/jaccard/all_pairs_jaccard_distance.tsv",
        genomes = rules.create_genomes_tsv.output.genomes_tsv
    output:
        communities = directory(f"{OUTPUTPATH}/jaccard/jaccard_communities"),
    threads: 1
    resources:
        mem_mb=lambda wildcards, attempt: config["get_communities_mem"]*attempt
    conda: "../envs/plasnet.yaml"
    params:
        jaccard_distance=config["seq_jaccard_distance"],
        bh_connectivity=config["bh_connectivity"],
        bh_neighbours_edge_density=config["bh_neighbours_edge_density"]
    shell: """
        plasnet split \
            --distance-threshold {params.jaccard_distance} \
            --bh-connectivity {params.bh_connectivity} \
            --bh-neighbours-edge-density {params.bh_neighbours_edge_density} \
            --output-plasmid-graph \
            {input.genomes} \
            {input.jaccard} \
            {output.communities}
    """
